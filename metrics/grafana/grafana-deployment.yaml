---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: instrumentation
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
        - name: init-grafana
          image: alpine:3.6
          command:
            - '/bin/sh'
            - '-c'
            - >
              r1=$(cat /dev/urandom | tr -dc \"a-zA-Z0-9\" | fold -w 32 | grep -v "\"" | head -n 1) &&
              echo "export GF_SECURITY_ADMIN_USER=\"${r1}\"" > /mnt/creds/creds.sh &&
              echo "export GRAFANA_USER=\"\${GF_SECURITY_ADMIN_USER}\"" >> /mnt/creds/creds.sh &&
              r2=$(cat /dev/urandom | tr -dc \"a-zA-Z0-9\" | fold -w 32 | grep -v "\"" | head -n 1) &&
              echo  "export GF_SECURITY_ADMIN_PASSWORD=\"${r2}\"" >> /mnt/creds/creds.sh &&
              echo  "export GRAFANA_PASSWORD=\"\${GF_SECURITY_ADMIN_PASSWORD}\"" >> /mnt/creds/creds.sh
          volumeMounts:
            - mountPath: /mnt/creds
              name: creds-volume
      containers:
        - name: grafana
          image: grafana/grafana:4.4.1
          command:
            - 'sh'
            - '-c'
            - '. /mnt/creds/creds.sh && /run.sh'
          env:
            - name: GF_AUTH_BASIC_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/grafana-storage
            - mountPath: /mnt/creds
              name: creds-volume
          ports:
            - name: web
              containerPort: 3000
          resources:
            requests:
              memory: 100Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 100m
        - name: grafana-watcher
          image: quay.io/coreos/grafana-watcher:v0.0.6
          command:
            - 'sh'
            - '-c'
            - '. /mnt/creds/creds.sh && /bin/grafana-watcher --wat  ch-dir=/var/grafana-dashboards --grafana-url=http://localhost:3000'
          resources:
            requests:
              memory: "16Mi"
              cpu: "50m"
            limits:
              memory: "32Mi"
              cpu: "100m"
          volumeMounts:
            - name: grafana-dashboards
              mountPath: /var/grafana-dashboards
            - mountPath: /mnt/creds
              name: creds-volume
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: creds-volume
          emptyDir: {}
